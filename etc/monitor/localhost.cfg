define host {
	use			linux-server
	host_name	localhost
	alias		localhost
	address		127.0.0.1
}

define service {
	use					local-service
	host_name			localhost
	service_description	System hostname
	check_command		check_snmp!public!.1.3.6.1.2.1.1.5.0
	servicegroups		system
}

define service {
	use					local-service
	host_name			localhost
	service_description	Contact
	check_command		check_snmp!public!.1.3.6.1.2.1.1.4.0
	servicegroups		system
}

define service {
	use					local-service
	host_name			localhost
	service_description	Location
	check_command		check_snmp!public!.1.3.6.1.2.1.1.6.0
	servicegroups		system
}

define service {
	use					local-service,graphed-service
	host_name			localhost
	service_description	Interfaces count
	check_command		check_snmp!public!.1.3.6.1.2.1.2.1.0
	servicegroups		interface
}

# OID .1.3.6.1.2.1.2.2.1.3.<IFNUMBER>, il suffit de saisir l'OID pour chaque interface.
# Dans un container Docker, l'OID change à chaque démarrage du container
define service {
	use					local-service
	host_name			localhost
	service_description	LO interface type
	check_command		check_snmp!public!.1.3.6.1.2.1.2.2.1.3.1!-m IF-MIB
	servicegroups		interface
}

define service {
	use					local-service,graphed-service
	host_name			localhost
	service_description	In Octets
	check_command		check_snmp!public!.1.3.6.1.2.1.2.2.1.10.1
	servicegroups		ip
}

define service {
	use					local-service,graphed-service
	host_name			localhost
	service_description	Out Octets
	check_command		check_snmp!public!.1.3.6.1.2.1.2.2.1.16.1
	servicegroups		ip
}

define service {
	use					local-service
	host_name			localhost
	service_description	IP address
	check_command		check_snmp!public!.1.3.6.1.2.1.3.1.1.3!-n
	servicegroups		ip
}

define service {
	use					local-service
	host_name			localhost
	service_description	Default gateway
	check_command		check_snmp!public!.1.3.6.1.2.1.4.21.1.1!-n
	servicegroups		ip
}

define service {
	use					local-service
	host_name			localhost
	service_description	TCP in segments count
	check_command		check_snmp!public!.1.3.6.1.2.1.6.10.0
	servicegroups		tcp
}

define service {
	use					local-service
	host_name			localhost
	service_description	TCP out segments count
	check_command		check_snmp!public!.1.3.6.1.2.1.6.11.0
	servicegroups		tcp
}

define service {
	use					local-service
	host_name			localhost
	service_description	TCP restrans segments count
	check_command		check_snmp!public!.1.3.6.1.2.1.6.12.0
	servicegroups		tcp
}

define service {
	use					local-service
	host_name			localhost
	service_description	UDP in datagrams count
	check_command		check_snmp!public!.1.3.6.1.2.1.7.1.0
	servicegroups		udp
}

define service {
	use					local-service
	host_name			localhost
	service_description	UDP out datagrams count
	check_command		check_snmp!public!.1.3.6.1.2.1.7.4.0
	servicegroups		udp
}